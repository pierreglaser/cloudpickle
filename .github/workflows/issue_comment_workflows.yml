name: Downstream Builds

on:
  issue_comment:
    types: [created]

jobs:
  dispatch-endpoint-sender:
    runs-on: ubuntu-latest
    steps:
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJson(github.event) }}
        run: echo "$GITHUB_CONTEXT"
      - uses: actions/checkout@v2
      - run: git fetch --depth=1 origin +refs/pull/*/head:refs/remotes/origin/pr/*
      - run: git checkout pr/${{ github.event.issue.number }}
      - run: |
          echo "::set-env name=GITHUB_PR_SHA::$(git rev-parse HEAD)"
      - name: Repository Dispatch
        uses: peter-evans/repository-dispatch@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          repository: pierreglaser/cloudpickle
          event-type: my-event
          client-payload: '{"sha": "${{ env.GITHUB_PR_SHA }}"}'

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Run a one-line script
      run: echo Hello from a downstream build
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.

  add-downstream-check:
    name: downstream builds
    runs-on: ubuntu-latest
    if: "startsWith(github.event.comment.body, '/run ci-downstream') || startsWith(github.event.comment.body, '/run ci-ray')"
    steps:
    - name: "Checkout the associated pull request's HEAD"
      uses: actions/checkout@v2
      # If the comment comes from a simple issue (and not a PR), run the
      # downstream builds on master.
      if: "github.event.issue.pull_request != ''"
      with:
        ref: ${{ github.event.issue.pull_request.head.sha }}
    # Export the current head's SHA. Can be either master's of a PR head's
    - uses: actions/checkout@v2
    - run: |
        echo "::set-env name=GITHUB_PR_SHA::$(git rev-parse HEAD)"
      # Create check run
    - uses: octokit/request-action@v2.x
      id: create_check_run
      with:
        route: POST /repos/:repository/check-runs
        repository: ${{ github.repository }}
        name: "Run downstream builds"
        mediaType: '{"previews": ["antiope"]}'
        head_sha: ${{ env.GITHUB_PR_SHA }}
        output: '{"title":"Test check run title","summary": "A summary of the test check run"}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - id: parse_create_check_run
      uses: gr2m/get-json-paths-action@v1.x
      with:
        json: ${{ steps.create_check_run.outputs.data }}
        id: "id"
    # Update check run to completed, succesful status
    - uses: octokit/request-action@v2.x
      id: update_check_run
      with:
        route: PATCH /repos/:repository/check-runs/:check_run_id
        repository: ${{ github.repository }}
        mediaType: '{"previews": ["antiope"]}'
        check_run_id: ${{ steps.parse_create_check_run.outputs.id }}
        conclusion: "success"
        status: "completed"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

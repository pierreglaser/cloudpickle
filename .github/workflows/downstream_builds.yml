name: Downstream Builds

on:
  issue_comment:
    types: [created]
  push:

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Run a one-line script
      run: echo Hello from a downstream build
    - name: Run a multi-line script
      run: |
        echo Add other actions to build,
        echo test, and deploy your project.
    - uses: octokit/request-action@v2.x
      id: list_check_suites
      with:
        route: GET /repos/:owner/:repo/commits/:ref/check-suites
        repository: "cloudpickle"
        owner: "pierreglaser"
        ref: ${{ github.event.head_commit.sha }}
    - env:
        CHECK_SUITES: ${{ toJson(steps.list_check_suites.outputs) }}
      run: |
        echo "$CHECK_SUITES"

  add-downstream-check:
    name: Downstream builds
    runs-on: ubuntu-latest
    # if: "startsWith(github.event.comment.body, '/run ci-downstream') || startsWith(github.event.comment.body, '/run ci-ray')"
    if: "startsWith(github.event.head_commit.message, '/run ci-downstream') || startsWith(github.event.head_commit.message, '/run ci-ray')"
    steps:
    - uses: actions/checkout@v2
    # I hard-code the pr number here because I don't have access to
    # github.event.issue.number when iterating on "push" workflows (as
    # issue_commment) workflows only get updated when master is changed
    - run: |
        git fetch --depth=1 origin +refs/pull/*/head:refs/remotes/origin/pr/*
        git checkout pr/7
        echo "::set-env name=GITHUB_PR_SHA::$(git rev-parse HEAD)"
      # Create check run
    - uses: octokit/request-action@v2.x
      id: create_check_run
      with:
        route: POST /repos/:repository/check-runs
        repository: ${{ github.repository }}
        name: "Run downstream builds"
        mediaType: '{"previews": ["antiope"]}'
        head_sha: ${{ env.GITHUB_PR_SHA }}
        output: '{"title":"Test check run title","summary": "A summary of the test check run"}'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    - id: parse_create_check_run
      uses: gr2m/get-json-paths-action@v1.x
      with:
        json: ${{ steps.create_check_run.outputs.data }}
        id: "id"
    # Update check run to completed, succesful status
    - uses: octokit/request-action@v2.x
      id: update_check_run
      with:
        route: PATCH /repos/:repository/check-runs/:check_run_id
        repository: ${{ github.repository }}
        mediaType: '{"previews": ["antiope"]}'
        check_run_id: ${{ steps.parse_create_check_run.outputs.id }}
        conclusion: "success"
        status: "completed"
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
